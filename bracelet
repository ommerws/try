import React, { useState, useRef } from 'react';
import { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';
import { Label } from '@/components/ui/label';
import { Input } from '@/components/ui/input';
import { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from '@/components/ui/select';
import { Button } from '@/components/ui/button';

const BraceletGenerator = () => {
  const [formData, setFormData] = useState({
    childName: '',
    language: '',
    parentName: '',
    countryCode: '',
    parentPhone: '',
    contactMethod: '',
    braceletSize: ''
  });

  const canvasRef = useRef(null);

  const handleInputChange = (e) => {
    const { name, value } = e.target;
    setFormData(prevData => ({ ...prevData, [name]: value }));
  };

  const handleSelectChange = (name, value) => {
    setFormData(prevData => ({ ...prevData, [name]: value }));
  };

  const generateBracelet = () => {
    const canvas = canvasRef.current;
    const ctx = canvas.getContext('2d');

    // Set canvas size based on bracelet size
    const sizes = { small: [200, 50], medium: [250, 60], large: [300, 70] };
    const [width, height] = sizes[formData.braceletSize] || sizes.medium;
    canvas.width = width;
    canvas.height = height;

    // Draw bracelet background
    ctx.fillStyle = '#f0f0f0';
    ctx.fillRect(0, 0, width, height);
    ctx.strokeStyle = '#000000';
    ctx.lineWidth = 2;
    ctx.strokeRect(0, 0, width, height);

    // Draw text
    ctx.fillStyle = '#000000';
    ctx.font = '12px Arial';
    ctx.fillText(`Name: ${formData.childName}`, 10, 20);
    ctx.fillText(`Language: ${formData.language}`, 10, 35);
    ctx.fillText(`Contact: ${formData.countryCode} ${formData.parentPhone}`, 10, 50);
    ctx.fillText(`Via: ${formData.contactMethod}`, 10, 65);

    // Here you would typically add the country flag image
    // ctx.drawImage(flagImage, width - 30, 5, 25, 15);

    return canvas.toDataURL('image/jpeg');
  };

  const handleSubmit = (e) => {
    e.preventDefault();
    const braceletImage = generateBracelet();
    
    // Create a download link
    const link = document.createElement('a');
    link.href = braceletImage;
    link.download = 'safety_bracelet.jpg';
    document.body.appendChild(link);
    link.click();
    document.body.removeChild(link);
  };

  return (
    <Card className="w-full max-w-md mx-auto">
      <CardHeader>
        <CardTitle>Child Safety Bracelet Generator</CardTitle>
      </CardHeader>
      <CardContent>
        <form onSubmit={handleSubmit} className="space-y-4">
          <div>
            <Label htmlFor="childName">Child's Name</Label>
            <Input id="childName" name="childName" value={formData.childName} onChange={handleInputChange} required />
          </div>
          <div>
            <Label htmlFor="language">Language</Label>
            <Input id="language" name="language" value={formData.language} onChange={handleInputChange} required />
          </div>
          <div>
            <Label htmlFor="parentName">Parent's Name</Label>
            <Input id="parentName" name="parentName" value={formData.parentName} onChange={handleInputChange} required />
          </div>
          <div className="flex space-x-2">
            <div className="w-1/3">
              <Label htmlFor="countryCode">Country Code</Label>
              <Input id="countryCode" name="countryCode" value={formData.countryCode} onChange={handleInputChange} required placeholder="+1" />
            </div>
            <div className="w-2/3">
              <Label htmlFor="parentPhone">Parent's Phone Number</Label>
              <Input id="parentPhone" name="parentPhone" value={formData.parentPhone} onChange={handleInputChange} required />
            </div>
          </div>
          <div>
            <Label htmlFor="contactMethod">Contact Method</Label>
            <Select name="contactMethod" onValueChange={(value) => handleSelectChange('contactMethod', value)}>
              <SelectTrigger>
                <SelectValue placeholder="Select contact method" />
              </SelectTrigger>
              <SelectContent>
                <SelectItem value="WhatsApp">WhatsApp</SelectItem>
                <SelectItem value="Phone Call">Phone Call</SelectItem>
              </SelectContent>
            </Select>
          </div>
          <div>
            <Label htmlFor="braceletSize">Bracelet Size</Label>
            <Select name="braceletSize" onValueChange={(value) => handleSelectChange('braceletSize', value)}>
              <SelectTrigger>
                <SelectValue placeholder="Select bracelet size" />
              </SelectTrigger>
              <SelectContent>
                <SelectItem value="small">Small</SelectItem>
                <SelectItem value="medium">Medium</SelectItem>
                <SelectItem value="large">Large</SelectItem>
              </SelectContent>
            </Select>
          </div>
          <Button type="submit" className="w-full">Generate and Download Bracelet</Button>
        </form>
        <canvas ref={canvasRef} style={{ display: 'none' }} />
      </CardContent>
    </Card>
  );
};

export default BraceletGenerator;
